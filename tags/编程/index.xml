<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 on 朝闻道</title>
    <link>https://1xiaoyuan.github.io/tags/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 编程 on 朝闻道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Apr 2024 16:37:55 +0800</lastBuildDate><atom:link href="https://1xiaoyuan.github.io/tags/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python中的 “虚拟环境”，一个概念的缺失带来的影响</title>
      <link>https://1xiaoyuan.github.io/archives/python%E4%B8%AD%E7%9A%84-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E4%B8%80%E4%B8%AA%E6%A6%82%E5%BF%B5%E7%9A%84%E7%BC%BA%E5%A4%B1%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%BD%B1%E5%93%8D.html/</link>
      <pubDate>Wed, 10 Apr 2024 16:37:55 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/python%E4%B8%AD%E7%9A%84-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E4%B8%80%E4%B8%AA%E6%A6%82%E5%BF%B5%E7%9A%84%E7%BC%BA%E5%A4%B1%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%BD%B1%E5%93%8D.html/</guid>
      <description>2024-04-10，下午14:00~16:05，倒腾了2个小时，终于能够成功运行PyHanLP了！下面记录一下学到的知识👇
为了完成毕业设计中的一个环节——从文本中提取非结构化的信息——我需要能够理解语义的工具，所以今天我为我的 Python 安装了 PyHanLP 。
下面分享一下我遇到的问题。有空了就介绍一下什么是 HanLP，没空就算了。
这篇文章，我将用我的实际经验向你证明，一个概念的缺失，有可能会让你的工作变得更复杂！如果我能够重视这个概念，并且理解它的影响，我想我会选择学习 Conde 这个专业的工具（用来专门负责 Python 的虚拟环境），再去下载 HanLP 这个第三方库。
HanLP 傻瓜安装注意事项 我使用了官网的 傻瓜安装包，谁知道这个傻瓜安装包真把我当傻瓜，它连安装目录都不让我选，就直接一键帮我安装了 JAVA 环境、HanLP、以及一个新 Python 3.8！
并且这些东西都被安装在了 C 盘！
我原本的 Python 3.12 无法调用 PyHanLP ，这个 PyHanLP 只能由傻瓜安装的 Python 3.8 才能调用。
为了解决这个问题，我试图将原本的项目虚拟环境中的 Python 3.12 换成 Python 3.8，但是换过之后原本写好的代码不管用了——原因是 Python 3.8 中并没有安装这些库。
我这才明白，虚拟环境中的 Python 版本也是指定的，就算我在虚拟环境中把解释器改成 Python 3.8，它也无法使用原本 Python 3.12 安装在虚拟环境中的 pip 库，因为这些库只认 Python 3.12！所以我必须新建一个虚拟环境。
然后我新建了一个虚拟环境，调用 Python 3.8 ，并将之前的代码都复制过来，然后重新下载这些代码中需要的第三方库，然而问题再次出现在我面前。
我试着运行 PyHanLP ，发现终端无法找到这个库。我又明白了，原来 PyHanLP 是全局环境的库，虚拟环境中无法调用全局环境中的库。
可问题是，就是因为在虚拟环境的终端中使用 pip install pyhanlp 根本就无法下载它，所以我才会选择傻瓜安装包来安装 PyHanLP。也就是说，我无法在虚拟环境中使用 PyHanLP了。我只能使用 C 盘的 Python 3.</description>
    </item>
    
    <item>
      <title>MySQL 基础知识笔记</title>
      <link>https://1xiaoyuan.github.io/archives/mysql-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0.html/</link>
      <pubDate>Sun, 07 Apr 2024 08:17:31 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/mysql-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0.html/</guid>
      <description>MySQL 中的数据格式
INT 整数 DECIMAL(m,n) 有小数的数，m是所有数字的个数，n是小数的个数 VARCHA(n) 字符串 BLOB 二进制文件，如图片、影片 DATE 日期，&amp;lsquo;YYYY-MM-DD&amp;rsquo; TIMESTAMP 时间，&amp;lsquo;YYYY-MM-DD HH:MM:SS&amp;rsquo; MySQL 中的命令书写习惯
MySQL 自带命令关键字一般用大写表示，如 SHOU DATABASES 用户在 MySQL 中自定义的字段名一般用 `` 符号标记，如 sql_tutorial 要用 ; 在命令语句结尾标记，表示该语句已结束，如 CREATE DATABASE sql_tutorial; 1、单表格操作： CREATE DATABASE sql_tutorial;
该命令表示创建数据库
SHOW DATABASES;
该命令表示显示所有数据库
DROP DATABASE sql_tutorial;
该命令表示删除数据库
USE sql_tutorial;
该命令表示使用数据库
DESCRIBE TABLE sql_tutorial;
查看数据表
创建表格 CREATE TABLE `student`( `student_id` INT PRIMARY KEY, `name` VARCHAR(20), `major` VARCHAR(20) ); 该命令表示在使用的数据库中创建表
DESCRIBE student;
该命令表示查看表
DROP TABLE student;</description>
    </item>
    
    <item>
      <title>Python正则表达式pattern分类</title>
      <link>https://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</link>
      <pubDate>Tue, 03 Jan 2023 21:52:45 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</guid>
      <description>网上的相关资料非常多，但都很乱。于是我做了个分类，一来自己方便查看，二来看到此文章的同仁也能省去些麻烦。
提示：正则表达式中的 pattern 参数通常都包含反斜杠，为了防止它们被识别为转义字符，最好使用原始字符串 r&#39;&#39; 来表示它们。(如 r&#39;\t&#39;，等价于 \\t )匹配相应的特殊字符。
使用原始字符串的优点是可以少写\号，代码阅读起来也更容易些。
正则表达式四大功能：匹配(bool值)、获取、替换、分割。
匹配单个字符 . ：表示任意一个字符。如表达式&#39;t.o&#39;，too或&#39;two&#39;都符合条件。 [&amp;hellip;]：匹配[]中列举的所有字符中的一个。 一个[]表示一个字符：[amk] 匹配 &amp;lsquo;a&amp;rsquo;，&amp;rsquo;m&amp;rsquo;或&amp;rsquo;k&amp;rsquo;。[a-zA-Z0-9]表示所有字母+数字。[A-Z][a-z]表示第一个字符为大写字母，第二个字符为小写字符，即两个字符。 注意无需使用 , 分割内容，[0-35-9] 表示0~3与5~9。 可以用 - 给出范围。如 [abc] 和 [a-c] 含义相同。 [^&amp;hellip;]：不在[]中的字符中的一个。 [^abc] 匹配除了a,b,c之外的字符。 匹配单个字符——它们可以写在字符集[]中 \w： 匹配数字字母下划线。等价于[a-zA-Z0-9_]，在Unicode字符中还可以匹配汉字、全角数字。 \W：匹配非数字字母下划线，等价于[^A-Za-z0-9_]。 \s：匹配任意空白字符、空格、tab键。等价于[\t\n\r\f]。 \S：匹配任意非空字符，等价于[^\t\n\r\f]。 \d：匹配任意数字，等价于 [0-9]。 \D：匹配任意非数字，等价于[^0-9]。 匹配多个字符 *：匹配*号前一个字符出现至少 0 次的表达式。如表达式abc*，匹配值ab，abccc。 +：匹配前⼀个字符出现 1 次或者⽆限次。如表达式abc+，匹配值abc，abccc。 ？：匹配前⼀个字符出现 1 次或者 0 次，即要么有 1 次，要么没有。非贪婪。 {m}：匹配前⼀个字符出现 m 次。如表达式ab{2}c，匹配值abbc。 {m,}：匹配前面表达式至少 m 次 {,n}：匹配前面的正则表达式最多 n 次 {m,n}：匹配前⼀个字符出现至少 m 至多 n 次。如表达式ab{1,3}c，匹配值abc，abbc，abbbc。 特殊匹配 | ：匹配左右任意一个表达式。如匹配0-100之间的数字，表达式re.</description>
    </item>
    
  </channel>
</rss>
