<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具 on xiao的博客</title>
    <link>https://1xiaoyuan.github.io/tags/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on xiao的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Jan 2023 20:36:23 +0800</lastBuildDate><atom:link href="https://1xiaoyuan.github.io/tags/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CDN加速</title>
      <link>https://1xiaoyuan.github.io/archives/cdn%E5%8A%A0%E9%80%9F.html/</link>
      <pubDate>Thu, 05 Jan 2023 20:36:23 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/cdn%E5%8A%A0%E9%80%9F.html/</guid>
      <description>小白互助😄
Oh，我的网站好慢呐 博客搭在Github的一个缺点是网页访问速度慢，为了解决这个问题，可以借助CDN。
网页为什么慢，简单地说，就是服务器（Github服务器在国外）和客户端（访问网站的用户）距离太远，资源拉取慢。
CDN，即内容分发网络。它的功能是将指定的资源提前缓存到分布在各个城市的站点（缓存服务器）。这样一来，在用户在访问网站后，数据将直接从距离最近的服务器中获取，无需再从原来那个远在天边的源服务器获取（如果它真的远在天边的话）。
ok，那么接下来的问题就是找到一个能白嫖的CDN了，嘻嘻。
jsdelivr 现在该轮到今天的主角了——jsdelivr。
配置起来及其简单，你不需要下载任何软件、申请任何账号，甚至只需要在浏览器的地址栏，按照要求的格式输入代码（其实就是一个网址/url），即可将你Github page上的博客文件上传到jsdelivr的服务器，然后使用他们的服务——CDN加速访问你的博客文件。
如果你的博客也搭建在Github，那么下面的内容对你会有所帮助。
首先，为你的Github的博客仓库发布一个release版本（只有这样才能使用jsdelivr）（很简单，需要你自行上网搜一下），然后我来告诉你需要在浏览器地址栏输入的代码：
注意：下面“你的Github名”、“你的仓库名”、“@发布的版本号”都需要你按照自己的Github来输入，你可以参考该文章末尾处最后一个代码（我的用法）。
如果想上传博客文件库的某个版本： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/ 或者上传版本中的某个文件： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/文件名+后缀 或者上传版本中的某个文件夹： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/文件夹名/ 注意结尾的 / 号是必须有的。
成功后会出现已上传的文档页面。然后你可能就会发现自己的网页打开速度飞快，至少比上次快。
使用以下代码可以直接上传整个仓库的文件，并且实时更新文件，而不是一次上传一个版本，事实上我觉得这是最方便的做法。
https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/
比如我是这么用的：https://cdn.jsdelivr.net/gh/1xiaoyuan/1xiaoyuan.github.io/
这是后来我才发现的，去掉版本号可以直接上传整个仓库🤷‍♂️ 实时更新真的太爽了。
新方案：cloudflare 2023-07-30，将新域名用 cloudflare 进行CDN托管，速度大大提高。</description>
    </item>
    
    <item>
      <title>手写笔记如何避免杂乱无章</title>
      <link>https://1xiaoyuan.github.io/archives/%E6%89%8B%E5%86%99%E7%AC%94%E8%AE%B0%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0.html/</link>
      <pubDate>Sat, 31 Dec 2022 19:06:18 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E6%89%8B%E5%86%99%E7%AC%94%E8%AE%B0%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0.html/</guid>
      <description>使用笔记本比较头疼的地方是：
结构混乱。有些内容是后来才意识到并补充的，但距上次相关内容的笔记记录很久了，新笔记与旧笔记之间有许多其他方面的笔记，导致两者相距甚远。 内容不明确。不知道一个笔记本适合记录几门知识，不知道相同门类知识该不该分行在一块记录。 具体使用方法 拿一个新笔记本，在页脚进行页码标注。
1~4页设为为索引页；5~8设为计划规划（按需使用，也可无此部分）。
第9页之后记录知识笔记。
不必为了某部分知识的连贯性，而专门为了“未来才学习到的知识”留下空白页。按照页码顺序记录每天学习的知识即可。
对于分散的、有关联的知识，只需将其页码一起标注在索引页，就能将所学的知识结构化串联起来。通过索引页随时可以找到相关的知识。
如果你已经理解我所说的不用在意顺序的记录方法，那么对于一个打卡计划、摘抄、备忘购物清单等等任何东西，你都可以记录在笔记本上，只需在索引页标注即可。
你可能会问“知识的记录是凌乱分散的，这样对学习有什么好处呢？”这是一个好问题。 放心，知识因为随意记录变得没有结构、没有联系，而索引页会让它们而变得结构分明，甚至比只按顺序却没有索引（目录）的笔记更有结构。
如果有打卡等记录习惯，请用好日历，因为“你的日历比你的银行账户更能衡量成功。”
索引页举例 1~4：索引页 5~8：计划 9~20：2023年1月的所有记录&amp;hellip;&amp;hellip; 21~35：2023年2月的所有记录&amp;hellip;&amp;hellip; 30：健身21天打卡计划 36~50：2023年3月的所有记录&amp;hellip;&amp;hellip; 总结收获 建议每周都必须做总结，可以使用一个新本子，每月也必须做总结。请大家想想，如果宝贵的经历没有主动总结为经验，使其慢慢从人生中消失，和每次都踏踏实实积累经验比起来，哪一个会先接近梦想成真？
列计划是一个循序渐进的过程，一开始很难完成列的全部计划，不要给自己增加负担。因为之所以要列计划，就是为了验证出自己真实的效率。比如你会发现通常每天计划做7个事情，你只能做4个（实际），然后你就能得出一个客观的结论：自己努努力，每天最能做5个计划。
更深入地分析，你就能知道完成某项计划大概需要花费多长时间，这就有利于指定更大维度的计划（如一年），并且降低误差。
除了总结出自己的真实效率，还要总结被干扰的原因。苏格拉底早在两千多年前就说过“认识你自己”，自我认识是一切的自我发展基础，我们需要知道自己的缺点、短板，从逻辑角度来说，人只有在认识自我和洞察自我之后，才可能去做出改变。从而实现自我，超越自我。
我的总结与规划不在同一个笔记本。</description>
    </item>
    
    <item>
      <title>快速搜索网页、打开常用应用</title>
      <link>https://1xiaoyuan.github.io/archives/%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E7%BD%91%E9%A1%B5%E6%89%93%E5%BC%80%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8.html/</link>
      <pubDate>Sat, 12 Nov 2022 00:29:17 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E7%BD%91%E9%A1%B5%E6%89%93%E5%BC%80%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8.html/</guid>
      <description>抛开效率应用不谈，最节省时间的办法是多用键盘，尤其是win键（对windows用户而言）。
任务栏搜索 任务栏左下角的搜索框，既能搜索并打开本地应用和服务，又能当作互联网搜索引擎使用。使用win键+输入文字也可以直接使用该功能。
使用方法：
按下win键，然后直接用键盘打字，内容可以是
一个软件名字的一部分：如微，wx，微信，然后会出现对应的本地程序以及网页搜索建议。按下回车就能打开微信。 一个服务：如控制，控制面板，kzmb，然后会出现对应的服务以及网页搜索建议。 再也不用怕有些很难找到具体位置的服务了。 一个搜索：如平凡之路，然后会出现网页搜索推荐。 这样一来，打开常用的软件、服务，就能这样加快速度了。
搜索某个问题，也不用再打开新页面，再点击搜索框后，再输入了。一个win键简化前两个步骤。
浏览器快速搜索 现在的主流浏览器是 Edge 和 Chrome ，我使用它们浏览网页，想要搜索一个概念或问题，就需要另开一个新网页再搜索，甚是麻烦。
下面提供一种在原页面进行搜索的方法。
Ctrl + E 打开地址栏快捷搜索； 输入想搜的问题； Alt + Enter 在新标签页打开搜索内容。 如果第3步直接用Enter，当前页面会被刷新。</description>
    </item>
    
  </channel>
</rss>
