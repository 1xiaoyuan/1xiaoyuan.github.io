<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 1xiao的博客</title>
    <link>http://1xiaoyuan.github.io/tags/python/</link>
    <description>Recent content in python on 1xiao的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Jan 2023 21:52:45 +0800</lastBuildDate><atom:link href="http://1xiaoyuan.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python正则表达式pattern分类</title>
      <link>http://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</link>
      <pubDate>Tue, 03 Jan 2023 21:52:45 +0800</pubDate>
      
      <guid>http://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</guid>
      <description>网上的相关资料非常多，但都很乱。于是我做了个分类，一来自己方便查看，二来看到此文章的同仁也能省去些麻烦。
提示：正则表达式中的 pattern 参数通常都包含反斜杠，为了防止它们被识别为转义字符，最好使用原始字符串 r&#39;&#39; 来表示它们。(如 r&#39;\t&#39;，等价于 \\t )匹配相应的特殊字符。
使用原始字符串的优点是可以少写\号，代码阅读起来也更容易些。
匹配单个字符 . ：表示任意一个字符。如表达式&#39;t.o&#39;，too或&#39;two&#39;都符合条件。 [&amp;hellip;]：匹配[]中列举的所有字符中的一个。 一个[]表示一个字符：[amk] 匹配 &amp;lsquo;a&amp;rsquo;，&amp;rsquo;m&amp;rsquo;或&amp;rsquo;k&amp;rsquo;。[a-zA-Z0-9]表示所有字母+数字。[A-Z][a-z]表示第一个字符为大写字母，第二个字符为小写字符，即两个字符。 注意无需使用 , 分割内容，[0-35-9] 表示0~3与5~9。 可以用 - 给出范围。如 [abc] 和 [a-c] 含义相同。 [^&amp;hellip;]：不在[]中的字符中的一个。 [^abc] 匹配除了a,b,c之外的字符。 匹配单个字符——它们可以写在字符集[]中 \w： 匹配数字字母下划线。等价于[a-zA-Z0-9_]，在Unicode字符中还可以匹配汉字、全角数字。 \W：匹配非数字字母下划线。 \s：匹配任意空白字符、空格、tab键。等价于 [ \t\n\r\f]。 \S：匹配任意非空字符。 \d：匹配任意数字，等价于 [0-9]。 \D：匹配任意非数字。 匹配多个字符 *：匹配*号前一个字符出现至少0次的表达式。如表达式abc*，匹配值ab，abccc。 +：匹配前⼀个字符出现1次或者⽆限次。如表达式abc+，匹配值abc，abccc。 ？：匹配前⼀个字符出现1次或者0次，即要么有1次，要么没有。非贪婪。 {m}：匹配前⼀个字符出现m次。如表达式ab{2}c，匹配值abbc。 {m,n}：匹配前⼀个字符出现从m到n次，若省略m，则匹配0到n次，若省略n，则匹配m到无限次。如表达式ab{1,3}c，匹配值abc，abbc，abbbc。 特殊匹配 | ：匹配左右任意一个表达式。如匹配0-100之间的数字，表达式re.match(r&#39;[1-9]?\d$|100&#39;,string)。 ()：匹配括号内的表达式，也可表示一个组(整体)，组与组之间联合使用。可以和|搭配，如识别邮箱时(163|126|qq)。 \b：匹配单词边界。 \b是零宽度不占字符的，它是一个边界线的存在，在\b的左右两侧，要求一个是\w，一个是\W。 也就是用于匹配处在边界的字符，比如\bhe可以匹配&amp;quot;he&amp;quot;但不能匹配&amp;quot;where&amp;quot;。 \bman\b可以匹配&amp;quot;I am a man, not a woman&amp;quot; 中的man，而不会匹配woman；但man\b会匹配出man和woman，因为后者的&amp;quot;man&amp;quot;也处在边界，使用时要注意。 \B：匹配非单词边界。 和\b相反，这样理解：在\B的左右两侧，要么全是\w，要么全是\W。 如py=\B可以匹配&amp;quot;py==&amp;ldquo;中的&amp;quot;py=&amp;quot;，但不能匹配&amp;quot;py=1&amp;quot;中的&amp;quot;py=&amp;quot;。 \n，\t，等：匹配一个换行符，匹配一个制表符, 等。 位置类 ^：匹配字符串的开头。 $：匹配字符串的末尾。 实例：re.</description>
    </item>
    
  </channel>
</rss>
