<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Todo on xiao的博客</title>
    <link>https://1xiaoyuan.github.io/categories/todo/</link>
    <description>Recent content in Todo on xiao的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Aug 2023 11:58:26 +0800</lastBuildDate><atom:link href="https://1xiaoyuan.github.io/categories/todo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一种纵向记录生活的方案</title>
      <link>https://1xiaoyuan.github.io/archives/%E4%B8%80%E7%A7%8D%E7%BA%B5%E5%90%91%E8%AE%B0%E5%BD%95%E7%94%9F%E6%B4%BB%E7%9A%84%E6%96%B9%E6%A1%88.html/</link>
      <pubDate>Mon, 21 Aug 2023 11:58:26 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E4%B8%80%E7%A7%8D%E7%BA%B5%E5%90%91%E8%AE%B0%E5%BD%95%E7%94%9F%E6%B4%BB%E7%9A%84%E6%96%B9%E6%A1%88.html/</guid>
      <description>日记的目的 创造自己的人生，首先要自己设定一个剧本，这是主动的事，不是被动的事。无论是学业规划，还是之后的职业规划，接着是事业规划，每个阶段都应该有所目标、规划，对每个目标的投入也应该有所记录。
因为想要有所进步，必须知道阻碍进步的关键原因在哪，首先要为自己创立一个反馈系统。人生的进度、当下的阶段状态如何、前行的方向是否正确&amp;hellip;&amp;hellip;这些问题都不能糊糊涂涂地视而不见。
记录的目的是为了未来某一刻对过去进行复盘——复盘是反馈系统的关键——日志/日记的意义就在于此。但我还要提出一个问题：怎样记录最有效率？
我认为一份有效的复盘档案应具有以下性质👇
可检索（通过日期、文字搜索内容） 实用性（内容能够应用于现实） 易记录（PC、手机多端同步） 易复盘（针对每件事，可以直观地看到1年内、1个月中自己哪些天做了、结果如何） 事件明确 我用过的日记方式 方式一：模块化日记 （类似于九宫格日记）
2023-08-21
工作方面：&amp;hellip;&amp;hellip; 学习方面：&amp;hellip;&amp;hellip; 情感方面：&amp;hellip;&amp;hellip; 兴趣方面：&amp;hellip;&amp;hellip; &amp;hellip;&amp;hellip; 这种方式的缺点：
只能以日为单位查看每天的流水账，无法针对具体的每件事进行直观地复盘，比如想要查看“投资知识的学习情况”，需要一天一天地检查，然后汇总到一个文件上，再进行复盘总结。 目标不明确，可能今天阅读了，明天跑步了，但都一股脑记录在“兴趣方面”，事件不明确。 方式二：感悟式日记
2023-08-21 今天第一次坐夜班的高铁，窗外黑漆漆的什么也看不到。 当我来到郑州时，刚好播放到《吹梦到西洲》这首歌，我好喜欢这首歌，喜欢它不仅仅是因为是今天恰好播放，还有明天将要进行的泰山之旅。 为明天的泰山之旅，期待并加油！
这种方式的缺点：
不能实用于现实，只是记录了一些对世界的感知。 方式三：感悟+模块式日记
2023-08-21
今日感悟：&amp;hellip;&amp;hellip; 工作方面：&amp;hellip;&amp;hellip; 学习方面：&amp;hellip;&amp;hellip; 情感方面：&amp;hellip;&amp;hellip; 兴趣方面：&amp;hellip;&amp;hellip; 这种方式的缺点：
虽然能较为全面地记录每日的感悟和各方面的事件，但想要复盘某件具体的事，仍需要二次整理； 不易阅读，各种内容记录在一起些许乱。 解决问题时的思路 我在想，日记和笔记的内核应该是相同的，日记用于记录发生在我们身上的事，笔记则是用于记录被我们学习的事。能不能将笔记和日记类同着看，互相取长补短呢？
举个例子，新高考之前的高中，理科学科有“语数外物化生”六门，所以学生会至少准备六个笔记本。
为什么六门课就要至少六个笔记本？
反过来想一想，如果像记日记/日志一样记笔记，所有科目的笔记都“以日期为单位”记录在同一个笔记本上，最终想要复习某一门具体的课，一定需要二次整理自己的笔记（把语文整理在一起、数学整理在一起&amp;hellip;&amp;hellip;），如果一个本子上什么都记，这不就是舍近求远了吗？我们完全可以在一开始就准备多个笔记本，用一个笔记本专门记录一门课的知识。
这给我的启发是：日记本不一定只能有一个；以日期为单位记录日记的方法对“复盘”的作用很有可能是舍近求远，需要二次整理。解决这个问题的关键就是，解决二次整理的问题。
最终的解决方案 像笔记一样一门课用一个本子，我将用于复盘的日记和用于记录生活感知的日记分开，并且用多个笔记本记录。
明确目标。我可能需要一个跑步日记本、一个阅读日记本、一个写作日记本、一个饮食日记本&amp;hellip;&amp;hellip; 软件选择WPS。解决可检索、易记录的需求。一个日记本就是一个Excel文件。 使用模板。解决易于复盘和阅读的需求。这是最关键的一步。 模板如下，一个Excel文件中创建12张表，对应12个月；
为什么是十年？ 用10年专攻某个领域，做到有所作为 让生活的过程可视化 </description>
    </item>
    
    <item>
      <title>一本时间管理书的精髓</title>
      <link>https://1xiaoyuan.github.io/archives/%E4%B8%80%E6%9C%AC%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E4%B9%A6%E7%9A%84%E7%B2%BE%E9%AB%93.html/</link>
      <pubDate>Tue, 01 Aug 2023 10:03:12 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E4%B8%80%E6%9C%AC%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E4%B9%A6%E7%9A%84%E7%B2%BE%E9%AB%93.html/</guid>
      <description>本篇文章主题：有根据、有条理地制定任务列表。以及兼容工作和生活的小技巧。
明确目标 写下自己的年度目标和月度目标和完成目标，以及关键结果。（注意这是两个要求）
必须明确自己的目标，有方向才不会迷路，有目标才不会漫无目的地浪费时间。 必须知道完成目的需要做什么，x+y=z，从取得结果 z 倒推需要完成的条件 x , y 。 example1：使身体更健康是目标，【达到 70 kg体重、睡眠时间保持 7h 以上、跑步5公里，配速达到4公里/分钟】是关键结果。 example2：通过考试是目标，【数学130分、英语70分】是关键结果。 example3：背500个单词是目标，【一个月后词汇量提升至xxxx】是关键结果。每天的背诵数和背单词的目标关系并不大，这是一个误区。
example4：做10套模拟卷是目标，【平均分从60提高到80】是关键结果。
将目标分为长期目标和短期目标
每周、每月都要为长期目标进行为目标分配时间的行为。 每周将任务落实到每天——只写必须必须要完成的 每月将任务落实到每周 每天都要为短期目标做准备/规划。 每天晚上制定次日的列表 每天早上回顾今天的列表，按照优先级行动 step1（写下目标和关键结果）制定长期目标
月度目标：学完一本概率论并自己制作思维导图；阅读《X》、《Y》两本书并读懂、并写感悟。 周目标：第 1 周学习概率论前 3 章；第 1 周阅读《X》的前 200 页。 step2（为每天分配任务）制定短期目标
第 1 周第 1 天需要&amp;hellip;.第 2 天需要&amp;hellip;&amp;hellip; 任务列表的要素 &amp;amp; ABC清单 任务列表必须明确，具体，可衡量，实操性强，需要做以下工作：
区分优先级——下面介绍实操性 ABC 清单。 确定截止日期——每个人物都要有明确的日期，且建议每个任务都提前完成。 设定完成任务所应取得的关键结果——比如背单词的可衡量结果是词汇量提升200。 事不过三——秉持重要的事情不超过三件的原则，把时间用在 20% 真正重要的事情上面。 接收到任务后立刻写在Inbox清单中。 任务列表不是一成不变的，甚至每小时都可以根据现状更新一次任务列表。 ABC清单是一种区分优先级的方法，我个人认为这种方法比当下流行的四象限方法更有实操性，对选择困难症来说非常友善，毕竟比四象限少了一个选择。
ABC清单的核心本质是：能带来报酬的任务就是优先重要的任务（80%的报酬来自于仅仅 20%的工作）。
使用步骤：
写下所有任务，进行 ABC 分类； 只做 A 任务； 如果 A 任务全部完成，从 B 任务中挑选任务升级为 A 类任务继续执行。 A 类任务：对某些人物（自己或他人）非常重要，且时间上紧急的任务。A 类任务最多 3 个。 B 类任务：重要但时间上不紧急的任务。A 类任务完成后就去 B 类中挑任务升级为 A 类。 C 类任务：对人不重要的任务。如果有人再提起，就升为 B 类，否则永远不打开。</description>
    </item>
    
    <item>
      <title>简化 Hugo 常用操作的方法</title>
      <link>https://1xiaoyuan.github.io/archives/%E7%AE%80%E5%8C%96-hugo-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%9A%84%E6%96%B9%E6%B3%95.html/</link>
      <pubDate>Sat, 29 Jul 2023 09:41:28 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E7%AE%80%E5%8C%96-hugo-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%9A%84%E6%96%B9%E6%B3%95.html/</guid>
      <description>我使用的博客工具 hugo：博客网站生成工具 vscode：文件编辑工具 git：上传文件到Github的工具 shell语言：编写一键完成指令代码 使用 vscode 和 git ，每次更新博客都需要输入一连串重复的代码，那么下面的内容可能会对为此而苦恼的用户有所帮助。
使用vscode和git的不方便之处 每次新建文件都需要在vscode的终端输入hugo new posts/新文件名.md来创建新文件 每次上传文件都需要在vscode的终端输入至少5个指令&amp;hellip;&amp;hellip;hugo、cd public、git add .&amp;hellip;&amp;hellip; 如果每修改并上传一次就要输入5个指令，这很令人产生不快，厌倦 那么有没有比较好的解决方案呢？ 答案是肯定的。
解决方案 一键创建新文件 1、首先，在博客的顶级文件夹创建new.sh文件 2、在文件中输入以下内容
time=$(date &amp;#34;+%Y-%m-%d&amp;#34;) echo $time hugo new posts/$time.md exit 3、每次新建文件时，在终端输入new再按Tab键，然后按回车键，即可在posts/目录中新建以当天日期为文件名的新文件。
一键上传文件 1、首先，在博客的顶级文件夹创建hugo.sh文件 2、在文件中输入以下内容
hugo time=$(date &amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;) echo $time cd public git add . git commit -m &amp;#34;自动执行构建脚本 🎓$time&amp;#34; git push exit 3、每次更新（上传）文件时，在终端输入hugo再按Tab键，然后按回车，即可将更新的博客自动上传至Github，并以当时的日期为更新备注。
如有问题，请通过邮箱联系。</description>
    </item>
    
    <item>
      <title>博客的CDN加速方案</title>
      <link>https://1xiaoyuan.github.io/archives/%E5%8D%9A%E5%AE%A2%E7%9A%84cdn%E5%8A%A0%E9%80%9F%E6%96%B9%E6%A1%88.html/</link>
      <pubDate>Thu, 05 Jan 2023 20:36:23 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E5%8D%9A%E5%AE%A2%E7%9A%84cdn%E5%8A%A0%E9%80%9F%E6%96%B9%E6%A1%88.html/</guid>
      <description>小白互助😄
Oh，我的网站好慢呐 博客搭在Github的一个缺点是网页访问速度慢，为了解决这个问题，可以借助CDN。
网页为什么慢，简单地说，就是服务器（Github服务器在国外）和客户端（访问网站的用户）距离太远，资源拉取慢。
CDN，即内容分发网络。它的功能是将指定的资源提前缓存到分布在各个城市的站点（缓存服务器）。这样一来，在用户在访问网站后，数据将直接从距离最近的服务器中获取，无需再从原来那个远在天边的源服务器获取（如果它真的远在天边的话）。
ok，那么接下来的问题就是找到一个能白嫖的CDN了，嘻嘻。
jsdelivr 现在该轮到今天的主角了——jsdelivr。
配置起来及其简单，你不需要下载任何软件、申请任何账号，甚至只需要在浏览器的地址栏，按照要求的格式输入代码（其实就是一个网址/url），即可将你Github page上的博客文件上传到jsdelivr的服务器，然后使用他们的服务——CDN加速访问你的博客文件。
如果你的博客也搭建在Github，那么下面的内容对你会有所帮助。
首先，为你的Github的博客仓库发布一个release版本（只有这样才能使用jsdelivr）（很简单，需要你自行上网搜一下），然后我来告诉你需要在浏览器地址栏输入的代码：
注意：下面“你的Github名”、“你的仓库名”、“@发布的版本号”都需要你按照自己的Github来输入，你可以参考该文章末尾处最后一个代码（我的用法）。
如果想上传博客文件库的某个版本： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/ 或者上传版本中的某个文件： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/文件名+后缀 或者上传版本中的某个文件夹： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/文件夹名/ 注意结尾的 / 号是必须有的。
成功后会出现已上传的文档页面。然后你可能就会发现自己的网页打开速度飞快，至少比上次快。
使用以下代码可以直接上传整个仓库的文件，并且实时更新文件，而不是一次上传一个版本，事实上我觉得这是最方便的做法。
https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/
比如我是这么用的：https://cdn.jsdelivr.net/gh/1xiaoyuan/1xiaoyuan.github.io/
这是后来我才发现的，去掉版本号可以直接上传整个仓库🤷‍♂️ 实时更新真的太爽了。
新方案：cloudflare 2023-07-30，将新域名用 cloudflare 进行CDN托管，速度大大提高。</description>
    </item>
    
    <item>
      <title>Python正则表达式pattern分类</title>
      <link>https://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</link>
      <pubDate>Tue, 03 Jan 2023 21:52:45 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</guid>
      <description>网上的相关资料非常多，但都很乱。于是我做了个分类，一来自己方便查看，二来看到此文章的同仁也能省去些麻烦。
提示：正则表达式中的 pattern 参数通常都包含反斜杠，为了防止它们被识别为转义字符，最好使用原始字符串 r&#39;&#39; 来表示它们。(如 r&#39;\t&#39;，等价于 \\t )匹配相应的特殊字符。
使用原始字符串的优点是可以少写\号，代码阅读起来也更容易些。
正则表达式四大功能：匹配(bool值)、获取、替换、分割。
匹配单个字符 . ：表示任意一个字符。如表达式&#39;t.o&#39;，too或&#39;two&#39;都符合条件。 [&amp;hellip;]：匹配[]中列举的所有字符中的一个。 一个[]表示一个字符：[amk] 匹配 &amp;lsquo;a&amp;rsquo;，&amp;rsquo;m&amp;rsquo;或&amp;rsquo;k&amp;rsquo;。[a-zA-Z0-9]表示所有字母+数字。[A-Z][a-z]表示第一个字符为大写字母，第二个字符为小写字符，即两个字符。 注意无需使用 , 分割内容，[0-35-9] 表示0~3与5~9。 可以用 - 给出范围。如 [abc] 和 [a-c] 含义相同。 [^&amp;hellip;]：不在[]中的字符中的一个。 [^abc] 匹配除了a,b,c之外的字符。 匹配单个字符——它们可以写在字符集[]中 \w： 匹配数字字母下划线。等价于[a-zA-Z0-9_]，在Unicode字符中还可以匹配汉字、全角数字。 \W：匹配非数字字母下划线，等价于[^A-Za-z0-9_]。 \s：匹配任意空白字符、空格、tab键。等价于[\t\n\r\f]。 \S：匹配任意非空字符，等价于[^\t\n\r\f]。 \d：匹配任意数字，等价于 [0-9]。 \D：匹配任意非数字，等价于[^0-9]。 匹配多个字符 *：匹配*号前一个字符出现至少 0 次的表达式。如表达式abc*，匹配值ab，abccc。 +：匹配前⼀个字符出现 1 次或者⽆限次。如表达式abc+，匹配值abc，abccc。 ？：匹配前⼀个字符出现 1 次或者 0 次，即要么有 1 次，要么没有。非贪婪。 {m}：匹配前⼀个字符出现 m 次。如表达式ab{2}c，匹配值abbc。 {m,}：匹配前面表达式至少 m 次 {,n}：匹配前面的正则表达式最多 n 次 {m,n}：匹配前⼀个字符出现至少 m 至多 n 次。如表达式ab{1,3}c，匹配值abc，abbc，abbbc。 特殊匹配 | ：匹配左右任意一个表达式。如匹配0-100之间的数字，表达式re.</description>
    </item>
    
    <item>
      <title>常用电脑小技巧——快速搜索网页、打开常用应用</title>
      <link>https://1xiaoyuan.github.io/archives/%E5%B8%B8%E7%94%A8%E7%94%B5%E8%84%91%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E7%BD%91%E9%A1%B5%E6%89%93%E5%BC%80%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8.html/</link>
      <pubDate>Sat, 12 Nov 2022 00:29:17 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E5%B8%B8%E7%94%A8%E7%94%B5%E8%84%91%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E7%BD%91%E9%A1%B5%E6%89%93%E5%BC%80%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8.html/</guid>
      <description>抛开效率应用不谈，最节省时间的办法是多用键盘，尤其是win键（对windows用户而言）。
任务栏搜索 任务栏左下角的搜索框，既能搜索并打开本地应用和服务，又能当作互联网搜索引擎使用。使用win键+输入文字也可以直接使用该功能。
使用方法：
按下win键，然后直接用键盘打字，内容可以是
一个软件名字的一部分：如微，wx，微信，然后会出现对应的本地程序以及网页搜索建议。按下回车就能打开微信。 一个服务：如控制，控制面板，kzmb，然后会出现对应的服务以及网页搜索建议。 再也不用怕有些很难找到具体位置的服务了。 一个搜索：如平凡之路，然后会出现网页搜索推荐。 这样一来，打开常用的软件、服务，就能这样加快速度了。
搜索某个问题，也不用再打开新页面，再点击搜索框后，再输入了。一个win键简化前两个步骤。
浏览器快速搜索 现在的主流浏览器是 Edge 和 Chrome ，我使用它们浏览网页，想要搜索一个概念或问题，就需要另开一个新网页再搜索，甚是麻烦。
下面提供一种在原页面进行搜索的方法。
Ctrl + E 打开地址栏快捷搜索； 输入想搜的问题； Alt + Enter 在新标签页打开搜索内容。 如果第3步直接用Enter，当前页面会被刷新。</description>
    </item>
    
    <item>
      <title>Hugo使用经验</title>
      <link>https://1xiaoyuan.github.io/archives/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.html/</link>
      <pubDate>Wed, 02 Nov 2022 14:42:35 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.html/</guid>
      <description>为了防止时间太久忘记方法，建站的关键知识点还是要记录一下的。
大人，时代变了 最初我打算自己写出整个网站（现在想想真傻），于是学了一些html和css知识。后来打开第一个txt文件准备动手写主页html文件时，我发现，我一点也写不下去，几个标签下来就厌倦不已，想完全掌握并熟练运用这些知识需要很长时间，就算掌握了它们，写出漂亮页面还需要想象力和创造力——短期内根本不可能写出完整的网页。最重要的是它们非常繁琐，一个人要投入多少时间精力才能搞定所有工作啊！
后来看到网友的一句话——独自造轮子的时代已经结束了，前人已经帮你把模型调好了——我才恍然大悟。我们这个时代太快了，闭门造车的做法很是愚蠢，学会借力前行才是。所以后来果断选择使用hugo引擎来做网站——它的作用是，你给出参数（模型），它负责组装。
不过html和css知识也没有白学，因为对网页结构有了解的话，知道什么是标签，什么是属性和值，以及它们的基本规则，与网页打交道时很有帮助，才有可能根据自己喜好修改主题的细节。
选择Hugo 网站生成器有很多，我看到许多人建站都会经历兜兜转转的过程，工具从wordpress到hexo，再到hugo，再到wordpress&amp;hellip;&amp;hellip;所以我想避免这个坑，于是在开始动手之前花了许久做决定，我的要求是经济、高效、方便——Hugo最适合不过了——静态网页经济安全，Hugo生成速度最快，也不需要服务器。
文件目录 这是每个文件夹存放的内容及其作用的标准格式。
archetypes 在default.md文件中存放文章页面参数 content 存放所有文章，如关于、分类、以及每篇文章 layouts：存放生成页面所使用的模板、参数 _default 页面模板 如list.html是列表页的模板，page.html是普通页的模板 hugo渲染并生成页面的本质：内容+模板=页面 partials 配件模板 如footer.html是页面底部区域的模板，header.html是页面头部的模板 页面模板中常会引用这些配件模板 shortcodes 短代码 在文章中固定格式的简洁代码，如引用bilibili的视频，插入网易云的音乐，所使用的代码存放在这里 这个思维导图，以及顶部的音乐都是短代码的功劳 如有需要，欢迎留言 static img 存放图像 css css模板 css的作用是让页面更漂亮，就像穿了新衣服 js JavaScript themes 存放所有的主题 代码 Hugo 查看版本：hugo version 新建库：hugo new site 666 在当前目录下，新建一个名为&amp;quot;666&amp;quot;的文件夹，其中内置应有的结构 新建文章： hugo new post/name.md 意思是在content/post文件夹内，生成一个名为name.md的文件 生成网页： hugo 将在父文件夹中生成public文件夹，存放着已经渲染好的所有页面 查看效果： hugo server 返回一个网址，你可以使用自己的浏览器来实时查看自己的页面效果 主题 我用的笨方法，下载主题zip包并解压到themes文件夹，之后在config文件中设置theme参数为主题名。 站内引用文章 知道越多越不快乐？：[知道越多越不快乐](https://1xiaoyuan.github.io/archives/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%95%BF%E5%A4%A7%E5%90%8E%E4%BC%9A%E5%8F%98%E5%BE%97%E4%B8%8D%E5%BF%AB%E4%B9%90.html/) 引用图片 ![实例](/img/posts/实例.png) Github 初始化配置
cd public git init git remote add origin https://github.</description>
    </item>
    
  </channel>
</rss>
