<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Todo on xiao的博客</title>
    <link>https://1xiaoyuan.github.io/categories/todo/</link>
    <description>Recent content in Todo on xiao的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Jul 2023 09:41:28 +0800</lastBuildDate><atom:link href="https://1xiaoyuan.github.io/categories/todo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2023 07 29 一键完成博客指令</title>
      <link>https://1xiaoyuan.github.io/archives/2023-07-29-%E4%B8%80%E9%94%AE%E5%AE%8C%E6%88%90%E5%8D%9A%E5%AE%A2%E6%8C%87%E4%BB%A4.html/</link>
      <pubDate>Sat, 29 Jul 2023 09:41:28 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/2023-07-29-%E4%B8%80%E9%94%AE%E5%AE%8C%E6%88%90%E5%8D%9A%E5%AE%A2%E6%8C%87%E4%BB%A4.html/</guid>
      <description>我使用的博客工具 hugo：博客网站生成工具 vscode：文件编辑工具 git：上传文件到Github的工具 使用 vscode 和 git ，每次更新博客都需要输入一连串重复的代码，那么下面的内容可能会对为此而苦恼的用户有所帮助。
使用vscode和git的不方便之处 每次新建文件都需要在vscode的终端输入hugo new posts/新文件名.md来创建新文件 每次上传文件都需要在vscode的终端输入至少5个指令&amp;hellip;&amp;hellip;hugo、cd public、git add .&amp;hellip;&amp;hellip; 如果每修改并上传一次就要输入5个指令，这很令人产生不快，厌倦 那么有没有比较好的解决方案呢？ 答案是肯定的。
解决方案 一键创建新文件 1、首先，在博客的顶级文件夹创建new.sh文件 2、在文件中输入以下内容
time=$(date &amp;#34;+%Y-%m-%d&amp;#34;) echo $time hugo new posts/$time.md exit 3、每次新建文件时，在终端输入new再按Tab键，然后按回车键，即可在posts/目录中新建以当天日期为文件名的新文件。
一键上传文件 1、首先，在博客的顶级文件夹创建hugo.sh文件 2、在文件中输入以下内容
hugo time=$(date &amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;) echo $time cd public git add . git commit -m &amp;#34;自动执行构建脚本 🎓$time&amp;#34; git push exit 3、每次更新（上传）文件时，在终端输入hugo再按Tab键，然后按回车，即可将更新的博客自动上传至Github，并以当时的日期为更新备注。
如有问题，请通过邮箱联系。</description>
    </item>
    
    <item>
      <title>2023 05 08 个人管理</title>
      <link>https://1xiaoyuan.github.io/archives/2023-05-08-%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86.html/</link>
      <pubDate>Mon, 08 May 2023 19:40:16 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/2023-05-08-%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86.html/</guid>
      <description> 学会休息和学会努力同样重要，人的精力有限。
拖延症 不过是惰于思考罢了。
5分钟原则。迟迟不愿行动的事件，先做5分钟就好！ 2分钟原则。如果一件事迟早要做，且两分钟就能搞定，那一刻也不要犹豫。否则小时堆积，要花费更多时间精力（切换）。 拆分任务。太困难导致畏难心理，应该一步一步来。 只需要花费很低的事件。精力成本，就能将看似艰巨的模糊消除。知道中途需要做什么，不用再转移意志力去重新思考。 可以把两个小时当作一个尺度，来分配一个大任务；也可以把任务内容当作尺度来分配。 奖励+延迟。给自己些动力，督促自己完成任务。 手机篇 戒掉手机最好的办法不是远离它，而是占用它。用它开启番茄钟，占用它。 情绪篇 改变心态只需要一分钟，而这一分钟却能改变一整天。 </description>
    </item>
    
    <item>
      <title>2023 05 08 记录方法</title>
      <link>https://1xiaoyuan.github.io/archives/2023-05-08-%E8%AE%B0%E5%BD%95%E6%96%B9%E6%B3%95.html/</link>
      <pubDate>Mon, 08 May 2023 19:33:29 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/2023-05-08-%E8%AE%B0%E5%BD%95%E6%96%B9%E6%B3%95.html/</guid>
      <description>一、思维导图 在纸的中央写下主题，然后随意发散思维； 对发散内容进行多种、交叉分类，总之写下所有可能的分类； 按照分类画出新的多个思维导图； 对这些思维导图进行发散，这时方向明确； 最后把所有图汇总成一张大的思维导图。 二、读书笔记 摘抄+复述+论证+联络
感触到的内容摘抄原话，末尾标记好书籍页码。 复述一遍，用自己的话。加深印象+检验理解。 写下自己的感触，最好能举个例子。 再想想以前的知识点里有没有和这个观点特别像的内容。吸收知识融会贯通，重中之重。 最初是以书为文档整理读书笔记，最后最好再以知识点为核心再迁移一次。为的是精通一个领域。 三、写作 能持续输出的人，是因为有强大的素材库。在素材库里有明确的分类——学习、生活、职场。分类下还有主题，主题里有随时积累的素材。
平时做好分类，把写作拆开去做。好的作者只是善于留住灵感。
找一篇参考文章，归纳每段重点+核心思想+案例。
打乱总结的重点，用自己的理解总结出心得文章。
原文vs自创，去思考作者为什么要用这样的结构、词汇、句法，寻找差距。
反复练习5，刻意练习4~5次，直到满意为止。
这套方法3~6源于富兰克林，他用1年时间从写作小白成了专栏作家。毕加索说：模仿，是人类一切学习的开始。连莎士比亚期初都是模仿英国的旧戏剧作者。
四、晨间日记 “能让你早起的，从来都不是闹钟，而是你的梦想。”
4.1 早晨写日记的原因 晚上我们情绪不稳定，很容易进行自我批评。 晚上一不小心，很容易就会变成极端的“后悔日记”或“反省日记”。 晚上想过的路千万条，白天醒来依旧走原路。 早晨可以冷静客观思考前一天的事，中立地看待问题。 可以将思考直接应用影响在当天，提高执行力。 4.2 记什么 不仅要记下事件发生时的情绪，还要记下前因后果。
假如只单纯写下自己的情绪的话，回头看日记时，无法知道自己为什么会产生那样子的情绪，也无法得知最重要的原因。如果只给未来的自己留了些情绪，人类只要一变得情绪化，原本能够解决的问题，也变得无法解决了。 不仅要记下前因后果，还要记下更好的选择。
多数人只是记每天发生的事，问题就出现在这里。日记最大的功用不是记录，而是反思后的能力提升。 如果写日记是一件没有收益的事，那取得成就的名人就不会坚持这件事。 像曾国藩、蒋介石等人，他们不光记发生了什么，还记下自己当时的想法，反思自己的处置是否合适，再做一次，有没有更好的选择。这就是在复盘。
建议设置至少设置 “工作”、“金钱”、“健康”、“人际关系” 四个栏位。
因为这四点是我们追求人生幸福所必备的条件。这样分板块写日记的好处是，不会毫无头绪，不会事无巨细。 4.3 坚持坚持坚持 一定要养成习惯。如果一件事情没办法坚持，就形成不了复利。 #01/复利
只要您的“习惯”做个改变，“命运”也会跟着改变。“命运”改变了，“人生”也会跟着改变。实现人生梦想的不二法门就是“改变生活习惯”。
切记程序化为主，毅力为辅。
很多人错误认为坚持靠的是毅力。但其实意志是一种稀缺资源，它和我们的体能密切相关。
养成习惯的前三天可以靠毅力，三天后至三个月就要靠程序化和仪式感了。这个阶段可能会有反噬，稍不注意前功尽弃，坚持不下去时再用毅力逼自己一把。
这里有几个保持程序化的小技巧。
它们背后的原理都是巴甫洛夫条件反射实验。苏联的学习心理学家巴甫洛夫，曾经利用一条狗来做实验。每次要喂食小狗吃饭前，先摇铃，再给予喂食。发现在几次试验之后，即使没有喂食食物，狗在听到摇铃声之后，一样会反射性地分泌唾液。 #01/习惯
这个实验告诉我们，必须充分利用我们的反射条件。所以在写晨间日记之前，一定要订个启动仪式。比方说，播放悦耳的音乐。
推荐制造有鸟叫与虫鸣的背景音乐。因为人类是从森林里面慢慢进化的，所以鸟叫或虫鸣可以很深入地传达到我们的脑部，让人放松。
还有就是固定书写的地点。固定的环境也能触发我们特定的行为。
降低难度，早上记笔记不要超过三分钟，坚持不下去的原因会是花太多时间写日记，成了负担。
“继续忽视反馈，生活会继续给你同样的教训。</description>
    </item>
    
    <item>
      <title>CDN加速</title>
      <link>https://1xiaoyuan.github.io/archives/cdn%E5%8A%A0%E9%80%9F.html/</link>
      <pubDate>Thu, 05 Jan 2023 20:36:23 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/cdn%E5%8A%A0%E9%80%9F.html/</guid>
      <description>小白互助😄
Oh，我的网站好慢呐 博客搭在Github的一个缺点是网页访问速度慢，为了解决这个问题，可以借助CDN。
网页为什么慢，简单地说，就是服务器（Github服务器在国外）和客户端（访问网站的用户）距离太远，资源拉取慢。
CDN，即内容分发网络。它的功能是将指定的资源提前缓存到分布在各个城市的站点（缓存服务器）。这样一来，在用户在访问网站后，数据将直接从距离最近的服务器中获取，无需再从原来那个远在天边的源服务器获取（如果它真的远在天边的话）。
ok，那么接下来的问题就是找到一个能白嫖的CDN了，嘻嘻。
jsdelivr 现在该轮到今天的主角了——jsdelivr。
配置起来及其简单，你不需要下载任何软件、申请任何账号，甚至只需要在浏览器的地址栏，按照要求的格式输入代码（其实就是一个网址/url），即可将你Github page上的博客文件上传到jsdelivr的服务器，然后使用他们的服务——CDN加速访问你的博客文件。
如果你的博客也搭建在Github，那么下面的内容对你会有所帮助。
首先，为你的Github的博客仓库发布一个release版本（只有这样才能使用jsdelivr）（很简单，需要你自行上网搜一下），然后我来告诉你需要在浏览器地址栏输入的代码：
注意：下面“你的Github名”、“你的仓库名”、“@发布的版本号”都需要你按照自己的Github来输入，你可以参考该文章末尾处最后一个代码（我的用法）。
如果想上传博客文件库的某个版本： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/ 或者上传版本中的某个文件： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/文件名+后缀 或者上传版本中的某个文件夹： https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/@发布的版本号/文件夹名/ 注意结尾的 / 号是必须有的。
成功后会出现已上传的文档页面。然后你可能就会发现自己的网页打开速度飞快，至少比上次快。
使用以下代码可以直接上传整个仓库的文件，并且实时更新文件，而不是一次上传一个版本，事实上我觉得这是最方便的做法。
https://cdn.jsdelivr.net/gh/你的Github名/你的仓库名/
比如我是这么用的：https://cdn.jsdelivr.net/gh/1xiaoyuan/1xiaoyuan.github.io/
这是后来我才发现的，去掉版本号可以直接上传整个仓库🤷‍♂️ 实时更新真的太爽了。</description>
    </item>
    
    <item>
      <title>Python正则表达式pattern分类</title>
      <link>https://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</link>
      <pubDate>Tue, 03 Jan 2023 21:52:45 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fpattern%E5%88%86%E7%B1%BB.html/</guid>
      <description>网上的相关资料非常多，但都很乱。于是我做了个分类，一来自己方便查看，二来看到此文章的同仁也能省去些麻烦。
提示：正则表达式中的 pattern 参数通常都包含反斜杠，为了防止它们被识别为转义字符，最好使用原始字符串 r&#39;&#39; 来表示它们。(如 r&#39;\t&#39;，等价于 \\t )匹配相应的特殊字符。
使用原始字符串的优点是可以少写\号，代码阅读起来也更容易些。
正则表达式四大功能：匹配(bool值)、获取、替换、分割。
匹配单个字符 . ：表示任意一个字符。如表达式&#39;t.o&#39;，too或&#39;two&#39;都符合条件。 [&amp;hellip;]：匹配[]中列举的所有字符中的一个。 一个[]表示一个字符：[amk] 匹配 &amp;lsquo;a&amp;rsquo;，&amp;rsquo;m&amp;rsquo;或&amp;rsquo;k&amp;rsquo;。[a-zA-Z0-9]表示所有字母+数字。[A-Z][a-z]表示第一个字符为大写字母，第二个字符为小写字符，即两个字符。 注意无需使用 , 分割内容，[0-35-9] 表示0~3与5~9。 可以用 - 给出范围。如 [abc] 和 [a-c] 含义相同。 [^&amp;hellip;]：不在[]中的字符中的一个。 [^abc] 匹配除了a,b,c之外的字符。 匹配单个字符——它们可以写在字符集[]中 \w： 匹配数字字母下划线。等价于[a-zA-Z0-9_]，在Unicode字符中还可以匹配汉字、全角数字。 \W：匹配非数字字母下划线，等价于[^A-Za-z0-9_]。 \s：匹配任意空白字符、空格、tab键。等价于[\t\n\r\f]。 \S：匹配任意非空字符，等价于[^\t\n\r\f]。 \d：匹配任意数字，等价于 [0-9]。 \D：匹配任意非数字，等价于[^0-9]。 匹配多个字符 *：匹配*号前一个字符出现至少 0 次的表达式。如表达式abc*，匹配值ab，abccc。 +：匹配前⼀个字符出现 1 次或者⽆限次。如表达式abc+，匹配值abc，abccc。 ？：匹配前⼀个字符出现 1 次或者 0 次，即要么有 1 次，要么没有。非贪婪。 {m}：匹配前⼀个字符出现 m 次。如表达式ab{2}c，匹配值abbc。 {m,}：匹配前面表达式至少 m 次 {,n}：匹配前面的正则表达式最多 n 次 {m,n}：匹配前⼀个字符出现至少 m 至多 n 次。如表达式ab{1,3}c，匹配值abc，abbc，abbbc。 特殊匹配 | ：匹配左右任意一个表达式。如匹配0-100之间的数字，表达式re.</description>
    </item>
    
    <item>
      <title>快速搜索网页、打开常用应用</title>
      <link>https://1xiaoyuan.github.io/archives/%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E7%BD%91%E9%A1%B5%E6%89%93%E5%BC%80%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8.html/</link>
      <pubDate>Sat, 12 Nov 2022 00:29:17 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E7%BD%91%E9%A1%B5%E6%89%93%E5%BC%80%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8.html/</guid>
      <description>抛开效率应用不谈，最节省时间的办法是多用键盘，尤其是win键（对windows用户而言）。
任务栏搜索 任务栏左下角的搜索框，既能搜索并打开本地应用和服务，又能当作互联网搜索引擎使用。使用win键+输入文字也可以直接使用该功能。
使用方法：
按下win键，然后直接用键盘打字，内容可以是
一个软件名字的一部分：如微，wx，微信，然后会出现对应的本地程序以及网页搜索建议。按下回车就能打开微信。 一个服务：如控制，控制面板，kzmb，然后会出现对应的服务以及网页搜索建议。 再也不用怕有些很难找到具体位置的服务了。 一个搜索：如平凡之路，然后会出现网页搜索推荐。 这样一来，打开常用的软件、服务，就能这样加快速度了。
搜索某个问题，也不用再打开新页面，再点击搜索框后，再输入了。一个win键简化前两个步骤。
浏览器快速搜索 现在的主流浏览器是 Edge 和 Chrome ，我使用它们浏览网页，想要搜索一个概念或问题，就需要另开一个新网页再搜索，甚是麻烦。
下面提供一种在原页面进行搜索的方法。
Ctrl + E 打开地址栏快捷搜索； 输入想搜的问题； Alt + Enter 在新标签页打开搜索内容。 如果第3步直接用Enter，当前页面会被刷新。</description>
    </item>
    
    <item>
      <title>Hugo使用经验</title>
      <link>https://1xiaoyuan.github.io/archives/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.html/</link>
      <pubDate>Wed, 02 Nov 2022 14:42:35 +0800</pubDate>
      
      <guid>https://1xiaoyuan.github.io/archives/hugo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.html/</guid>
      <description>为了防止时间太久忘记方法，建站的关键知识点还是要记录一下的。
大人，时代变了 最初我打算自己写出整个网站（现在想想真傻），于是学了一些html和css知识。后来打开第一个txt文件准备动手写主页html文件时，我发现，我一点也写不下去，几个标签下来就厌倦不已，想完全掌握并熟练运用这些知识需要很长时间，就算掌握了它们，写出漂亮页面还需要想象力和创造力——短期内根本不可能写出完整的网页。最重要的是它们非常繁琐，一个人要投入多少时间精力才能搞定所有工作啊！
后来看到网友的一句话——独自造轮子的时代已经结束了，前人已经帮你把模型调好了——我才恍然大悟。我们这个时代太快了，闭门造车的做法很是愚蠢，学会借力前行才是。所以后来果断选择使用hugo引擎来做网站——它的作用是，你给出参数（模型），它负责组装。
不过html和css知识也没有白学，因为对网页结构有了解的话，知道什么是标签，什么是属性和值，以及它们的基本规则，与网页打交道时很有帮助，才有可能根据自己喜好修改主题的细节。
选择Hugo 网站生成器有很多，我看到许多人建站都会经历兜兜转转的过程，工具从wordpress到hexo，再到hugo，再到wordpress&amp;hellip;&amp;hellip;所以我想避免这个坑，于是在开始动手之前花了许久做决定，我的要求是经济、高效、方便——Hugo最适合不过了——静态网页经济安全，Hugo生成速度最快，也不需要服务器。
文件目录 这是每个文件夹存放的内容及其作用的标准格式。
archetypes 在default.md文件中存放文章页面参数 content 存放所有文章，如关于、分类、以及每篇文章 layouts：存放生成页面所使用的模板、参数 _default 页面模板 如list.html是列表页的模板，page.html是普通页的模板 hugo渲染并生成页面的本质：内容+模板=页面 partials 配件模板 如footer.html是页面底部区域的模板，header.html是页面头部的模板 页面模板中常会引用这些配件模板 shortcodes 短代码 在文章中固定格式的简洁代码，如引用bilibili的视频，插入网易云的音乐，所使用的代码存放在这里 这个思维导图，以及顶部的音乐都是短代码的功劳 如有需要，欢迎留言 static img 存放图像 css css模板 css的作用是让页面更漂亮，就像穿了新衣服 js JavaScript themes 存放所有的主题 代码 Hugo 查看版本：hugo version 新建库：hugo new site 666 在当前目录下，新建一个名为&amp;quot;666&amp;quot;的文件夹，其中内置应有的结构 新建文章： hugo new post/name.md 意思是在content/post文件夹内，生成一个名为name.md的文件 生成网页： hugo 将在父文件夹中生成public文件夹，存放着已经渲染好的所有页面 查看效果： hugo server 返回一个网址，你可以使用自己的浏览器来实时查看自己的页面效果 主题 我用的笨方法，下载主题zip包并解压到themes文件夹，之后在config文件中设置theme参数为主题名。 Github 初始化配置
cd public git init git remote add origin https://github.</description>
    </item>
    
  </channel>
</rss>
